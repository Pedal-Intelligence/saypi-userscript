/* ChatGPT host-specific UI polish */
body.chatgpt {
  /* Hide control panel buttons that aren't needed until Phase 3/4 */
  .immersive-mode-button,
  .settings-button,
  #saypi-enter-button,
  #saypi-exit-button,
  #saypi-settingsButton,
  #saypi-control-panel-main {
    display: none !important;
  }
  /* Tooltip: compact black pill above the button, matching ChatGPT feel */
  .tooltip[aria-label]::after {
    content: attr(aria-label);
    position: absolute;
    top: -130%;
    left: 50%;
    transform: translateX(-50%);
    white-space: nowrap;
    background-color: rgba(0, 0, 0, 0.85);
    color: #fff;
    padding: 6px 8px;
    border-radius: 9999px; /* pill */
    font-size: 0.75rem; /* text-xs */
    line-height: 1;
    opacity: 0;
    transition: opacity 0.15s ease-in-out;
    pointer-events: none;
    z-index: 1000;
  }

  @media (hover: hover) {
    .tooltip[aria-label]:hover::after { opacity: 1; }
  }

  /* Subtle hover background using ::before overlay (composer-btn inspired) */
  #saypi-callButton {
    position: relative;
  }
  #saypi-callButton::before {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: 9999px;
    background-color: rgba(0,0,0,0); /* transparent by default */
    z-index: -1; /* behind icon */
    transition: background-color 0.15s ease-in-out;
  }
  /* Theme-aware hover wash: darker on light theme, lighter on dark theme */
  @media (hover: hover) {
    html:not(.dark) & #saypi-callButton:hover::before {
      background-color: var(--interactive-bg-secondary-hover, rgba(0,0,0,0.06));
    }
    html.dark & #saypi-callButton:hover::before {
      background-color: rgba(255,255,255,0.08);
    }
  }

  /* Portal tooltip element appended to body to avoid overflow clipping */
  .saypi-tooltip {
    position: fixed;
    /* Use black pill in both themes for contrast; allow host var override when available */
    background-color: var(--radix-tooltip-bg, rgba(0,0,0,0.85));
    color: var(--radix-tooltip-fg, #fff);
    padding: 6px 8px;
    border-radius: 9999px;
    font-size: 0.75rem;
    line-height: 1;
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.12s ease-in-out;
    white-space: nowrap;
    box-shadow: 0 4px 10px rgba(0,0,0,0.15);
  }

  /* Invisible holder for temporarily relocated ChatGPT menu item
     used to trigger Read Aloud outside the Radix popper. */
  .saypi-relocated-voice-action {
    position: absolute !important;
    width: 0 !important;
    height: 0 !important;
    overflow: hidden !important;
    opacity: 0 !important;
    pointer-events: none !important;
  }

  /* Hide open Radix dropdown content we’ve flagged as hidden
     (we do not toggle the popper's actual open state). */
  [data-radix-popper-content-wrapper][data-saypi-hidden="true"],
  [data-radix-menu-content][data-saypi-hidden="true"],
  [data-radix-dropdown-menu-content][data-saypi-hidden="true"] {
    visibility: hidden !important;
    opacity: 0 !important;
    pointer-events: none !important;
  }

  /* Minimize and soften the open menu while shielded. Keep it visible
     so ChatGPT's playback context remains intact, but less distracting. */
  [data-radix-popper-content-wrapper][data-saypi-shielded="true"],
  [data-radix-menu-content][data-saypi-shielded="true"],
  [data-radix-dropdown-menu-content][data-saypi-shielded="true"] {
    opacity: 0.28 !important;
    /* Position/transform is set inline when shielded so we can move it
       to the bottom-right; keep transitions for a smooth effect. */
    transition: opacity 120ms ease, transform 140ms ease !important;
    transform-origin: var(--radix-popper-transform-origin, 50% 0%);
    pointer-events: none !important; /* allow reading/clicks behind the menu */
  }

  /* Maintenance message polish for ChatGPT
     ChatGPT centers message content inside a max‑width column; the outer
     article spans full width. Style the inner `.content` block so the
     collapsed bubble appears centered (matching Pi/Claude behavior). */
  .assistant-message.maintenance-message {
    .content { position: relative; }

    &.silenced {
      /* Keep the outer row transparent; style the bubble on the content */
      background: transparent;
      border: 0;
      opacity: 0.88;
      cursor: pointer;
      /* Cancel generic clipping from base styles and let bubble size itself */
      max-height: none;
      overflow: visible;
      transition: opacity 0.2s ease-out, transform 0.12s ease-out;

      .content {
        /* Prefer Say, Pi theme variables when present */
        background-color: var(--theme-user-msg-bg, var(--gray-50, rgba(0,0,0,0.03)));
        border: 1px solid var(--gray-100, rgba(0, 0, 0, 0.1));
        border-radius: 16px;
        padding: 10px 14px 11px 38px; /* slightly tighter left padding */
        min-height: 38px;
        /* Override ChatGPT's `w-full` so the bubble looks like a compact pill */
        width: auto;
        max-width: min(68ch, 92%);
        display: inline-block;
        align-self: flex-start; /* assistant turns are left aligned */
        margin-right: auto !important;
        margin-left: 0 !important;
        box-shadow: 0 1px 0 rgba(0,0,0,0.06);
        -webkit-font-smoothing: antialiased;
        text-rendering: optimizeLegibility;
        transition: background-color 120ms ease, transform 120ms ease;
        color: var(--theme-user-msg-text, inherit);

        &::before {
          content: attr(data-message-label);
          display: block;
          padding: 0 0 4px 0;
          font-style: italic;
          font-weight: 500;
          font-size: 0.93em;
          color: currentColor;
          /* Improve contrast while still softer than body text */
          opacity: 0.86;
          line-height: 1.25;
          letter-spacing: 0.005em;
        }
        > *:not(.thinking-icon-container) { display: none; }
      }

      .thinking-icon-container {
        position: absolute;
        left: 10px; /* nudge icon slightly inward */
        top: 50%;
        transform: translateY(-50%);
        z-index: 1;
        svg.thinking-icon { width: 20px; height: 20px; display: block; }
        /* Force monochrome themeing for embedded SVGs */
        svg.thinking-icon, svg.thinking-icon * {
          stroke: currentColor !important;
          fill: currentColor !important;
        }
        svg.thinking-icon { opacity: 0.85; }
      }

      .message-action-bar, .message-hover-menu { display: none; }

      &:hover, &:active {
        .content {
          background-color: color-mix(in srgb, var(--theme-user-msg-bg, rgba(0,0,0,0.03)) 92%, #fff 8%);
          transform: translateY(-0.5px) scale(0.995);
        }
      }
    }

    /* Expanded state keeps ChatGPT defaults; just smooth opacity */
    &:not(.silenced) { transition: opacity 0.2s ease; }
  }

  /* Dark theme tweaks */
  html.dark & {
    .assistant-message.maintenance-message.silenced {
      .content {
        /* Theme by class to avoid brittle host tokens */
        background-color: var(--theme-user-msg-bg, rgba(255, 255, 255, 0.14));
        border-color: color-mix(in srgb, var(--theme-user-msg-bg, #ffffff) 35%, #000 65%);
        box-shadow: 0 1px 0 rgba(0,0,0,0.55), 0 0 0 1px rgba(255,255,255,0.04) inset;
        backdrop-filter: saturate(110%) brightness(105%);
        color: var(--theme-user-msg-text, #ededed);
        /* Slightly stronger label for readability on dark */
        &::before {
          color: currentColor;
          opacity: 0.9;
          /* Subtle shadow to lift label on saturated dark accents */
          text-shadow: 0 1px 0 rgba(0,0,0,0.35);
        }
      }
      .thinking-icon-container svg.thinking-icon { opacity: 0.92; }
      &:hover, &:active { .content { background-color: color-mix(in srgb, var(--theme-user-msg-bg, #ffffff) 88%, #fff 12%); } }
    }
  }

  /* Explicit light theme overrides for clarity */
  html:not(.dark) & {
    .assistant-message.maintenance-message.silenced {
      .content {
        background-color: var(--theme-user-msg-bg, rgba(0,0,0,0.045));
        border-color: color-mix(in srgb, var(--theme-user-msg-bg, #000000) 8%, #000 12%);
        box-shadow: 0 1px 0 rgba(0,0,0,0.06);
        color: var(--theme-user-msg-text, #1f1f1f);
        &::before { color: currentColor; opacity: 0.76; }
      }
    }
  }

  /* User steer (instructions) — theme icons/labels to match host text */
  .user-prompt.with-instructions {
    .instruction-label {
      color: var(--theme-user-msg-text, inherit);
      font-style: italic;
      opacity: 0.86;
    }
    .steer-icon-container svg.steer-icon,
    .steer-icon-container svg.steer-icon * {
      fill: currentColor !important;
      stroke: currentColor !important;
    }
    .steer-icon-container svg.steer-icon { opacity: 0.88; }
  }

  /* Keyboard focus affordance on the bubble */
  .assistant-message.maintenance-message.silenced .content:focus-visible {
    outline: none;
    box-shadow: 0 0 0 2px color-mix(in srgb, currentColor 32%, transparent);
    transition: box-shadow 120ms ease;
  }
}
